// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.2
// source: poll.proto

package poll

import (
	user "github.com/BigNoseCattyHome/aorb/backend/rpc/user"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionPollType int32

const (
	ActionPollType_ACTION_POLL_TYPE_UNSPECIFIED ActionPollType = 0
	ActionPollType_ACTION_POLL_TYPE_ADD         ActionPollType = 1
	ActionPollType_ACTION_POLL_TYPE_DELETE      ActionPollType = 2
)

// Enum value maps for ActionPollType.
var (
	ActionPollType_name = map[int32]string{
		0: "ACTION_POLL_TYPE_UNSPECIFIED",
		1: "ACTION_POLL_TYPE_ADD",
		2: "ACTION_POLL_TYPE_DELETE",
	}
	ActionPollType_value = map[string]int32{
		"ACTION_POLL_TYPE_UNSPECIFIED": 0,
		"ACTION_POLL_TYPE_ADD":         1,
		"ACTION_POLL_TYPE_DELETE":      2,
	}
)

func (x ActionPollType) Enum() *ActionPollType {
	p := new(ActionPollType)
	*p = x
	return p
}

func (x ActionPollType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionPollType) Descriptor() protoreflect.EnumDescriptor {
	return file_poll_proto_enumTypes[0].Descriptor()
}

func (ActionPollType) Type() protoreflect.EnumType {
	return &file_poll_proto_enumTypes[0]
}

func (x ActionPollType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionPollType.Descriptor instead.
func (ActionPollType) EnumDescriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{0}
}

type Poll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         // 问题id
	User       *user.User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`                      // 用户信息
	Title      string     `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                    // 问题标题
	ChoiceA    string     `protobuf:"bytes,4,opt,name=choice_a,json=choiceA,proto3" json:"choice_a,omitempty"` // 选项a
	ChoiceB    string     `protobuf:"bytes,5,opt,name=choice_b,json=choiceB,proto3" json:"choice_b,omitempty"` // 选项b
	CreateDate string     `protobuf:"bytes,6,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
}

func (x *Poll) Reset() {
	*x = Poll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poll_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Poll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poll) ProtoMessage() {}

func (x *Poll) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poll.ProtoReflect.Descriptor instead.
func (*Poll) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{0}
}

func (x *Poll) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Poll) GetUser() *user.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Poll) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Poll) GetChoiceA() string {
	if x != nil {
		return x.ChoiceA
	}
	return ""
}

func (x *Poll) GetChoiceB() string {
	if x != nil {
		return x.ChoiceB
	}
	return ""
}

func (x *Poll) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

type ActionPollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId    uint32         `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	PollId     uint32         `protobuf:"varint,2,opt,name=poll_id,json=pollId,proto3" json:"poll_id,omitempty"`
	ActionType ActionPollType `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3,enum=rpc.poll.ActionPollType" json:"action_type,omitempty"`
}

func (x *ActionPollRequest) Reset() {
	*x = ActionPollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poll_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionPollRequest) ProtoMessage() {}

func (x *ActionPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionPollRequest.ProtoReflect.Descriptor instead.
func (*ActionPollRequest) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{1}
}

func (x *ActionPollRequest) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *ActionPollRequest) GetPollId() uint32 {
	if x != nil {
		return x.PollId
	}
	return 0
}

func (x *ActionPollRequest) GetActionType() ActionPollType {
	if x != nil {
		return x.ActionType
	}
	return ActionPollType_ACTION_POLL_TYPE_UNSPECIFIED
}

type ActionPollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	StatusMsg  string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	Poll       *Poll  `protobuf:"bytes,3,opt,name=poll,proto3,oneof" json:"poll,omitempty"`
}

func (x *ActionPollResponse) Reset() {
	*x = ActionPollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poll_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionPollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionPollResponse) ProtoMessage() {}

func (x *ActionPollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionPollResponse.ProtoReflect.Descriptor instead.
func (*ActionPollResponse) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{2}
}

func (x *ActionPollResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ActionPollResponse) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *ActionPollResponse) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

type ListPollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId uint32 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *ListPollRequest) Reset() {
	*x = ListPollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poll_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPollRequest) ProtoMessage() {}

func (x *ListPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPollRequest.ProtoReflect.Descriptor instead.
func (*ListPollRequest) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{3}
}

func (x *ListPollRequest) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

type ListPollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	StatusMsg  string  `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	PollList   []*Poll `protobuf:"bytes,3,rep,name=poll_list,json=pollList,proto3" json:"poll_list,omitempty"`
}

func (x *ListPollResponse) Reset() {
	*x = ListPollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poll_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPollResponse) ProtoMessage() {}

func (x *ListPollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPollResponse.ProtoReflect.Descriptor instead.
func (*ListPollResponse) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{4}
}

func (x *ListPollResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ListPollResponse) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *ListPollResponse) GetPollList() []*Poll {
	if x != nil {
		return x.PollList
	}
	return nil
}

type CountPollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId uint32 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *CountPollRequest) Reset() {
	*x = CountPollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poll_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPollRequest) ProtoMessage() {}

func (x *CountPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPollRequest.ProtoReflect.Descriptor instead.
func (*CountPollRequest) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{5}
}

func (x *CountPollRequest) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

type CountPollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	StatusMsg  string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	PollCount  uint32 `protobuf:"varint,3,opt,name=poll_count,json=pollCount,proto3" json:"poll_count,omitempty"`
}

func (x *CountPollResponse) Reset() {
	*x = CountPollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poll_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPollResponse) ProtoMessage() {}

func (x *CountPollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPollResponse.ProtoReflect.Descriptor instead.
func (*CountPollResponse) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{6}
}

func (x *CountPollResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CountPollResponse) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *CountPollResponse) GetPollCount() uint32 {
	if x != nil {
		return x.PollCount
	}
	return 0
}

var File_poll_proto protoreflect.FileDescriptor

var file_poll_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x04, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x41,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x82, 0x01, 0x0a,
	0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x70, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x6f, 0x6c, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6f, 0x6c,
	0x6c, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x22, 0x2c, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x09,
	0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x52,
	0x08, 0x70, 0x6f, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x10, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x69, 0x0a, 0x0e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x1c, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4f, 0x4c, 0x4c, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4f, 0x4c, 0x4c, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4f, 0x4c, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x32, 0xdf, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x6c, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x6c,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6f,
	0x6c, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x6c,
	0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x42, 0x69, 0x67, 0x4e, 0x6f, 0x73, 0x65, 0x43,
	0x61, 0x74, 0x74, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x2f, 0x61, 0x6f, 0x72, 0x62, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x6f, 0x6c, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_poll_proto_rawDescOnce sync.Once
	file_poll_proto_rawDescData = file_poll_proto_rawDesc
)

func file_poll_proto_rawDescGZIP() []byte {
	file_poll_proto_rawDescOnce.Do(func() {
		file_poll_proto_rawDescData = protoimpl.X.CompressGZIP(file_poll_proto_rawDescData)
	})
	return file_poll_proto_rawDescData
}

var file_poll_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_poll_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_poll_proto_goTypes = []interface{}{
	(ActionPollType)(0),        // 0: rpc.poll.ActionPollType
	(*Poll)(nil),               // 1: rpc.poll.Poll
	(*ActionPollRequest)(nil),  // 2: rpc.poll.ActionPollRequest
	(*ActionPollResponse)(nil), // 3: rpc.poll.ActionPollResponse
	(*ListPollRequest)(nil),    // 4: rpc.poll.ListPollRequest
	(*ListPollResponse)(nil),   // 5: rpc.poll.ListPollResponse
	(*CountPollRequest)(nil),   // 6: rpc.poll.CountPollRequest
	(*CountPollResponse)(nil),  // 7: rpc.poll.CountPollResponse
	(*user.User)(nil),          // 8: rpc.user.User
}
var file_poll_proto_depIdxs = []int32{
	8, // 0: rpc.poll.Poll.user:type_name -> rpc.user.User
	0, // 1: rpc.poll.ActionPollRequest.action_type:type_name -> rpc.poll.ActionPollType
	1, // 2: rpc.poll.ActionPollResponse.poll:type_name -> rpc.poll.Poll
	1, // 3: rpc.poll.ListPollResponse.poll_list:type_name -> rpc.poll.Poll
	2, // 4: rpc.poll.PollService.ActionPoll:input_type -> rpc.poll.ActionPollRequest
	4, // 5: rpc.poll.PollService.ListPoll:input_type -> rpc.poll.ListPollRequest
	6, // 6: rpc.poll.PollService.CountPoll:input_type -> rpc.poll.CountPollRequest
	3, // 7: rpc.poll.PollService.ActionPoll:output_type -> rpc.poll.ActionPollResponse
	5, // 8: rpc.poll.PollService.ListPoll:output_type -> rpc.poll.ListPollResponse
	7, // 9: rpc.poll.PollService.CountPoll:output_type -> rpc.poll.CountPollResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_poll_proto_init() }
func file_poll_proto_init() {
	if File_poll_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_poll_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Poll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poll_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionPollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poll_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionPollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poll_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poll_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poll_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poll_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_poll_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_poll_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_poll_proto_goTypes,
		DependencyIndexes: file_poll_proto_depIdxs,
		EnumInfos:         file_poll_proto_enumTypes,
		MessageInfos:      file_poll_proto_msgTypes,
	}.Build()
	File_poll_proto = out.File
	file_poll_proto_rawDesc = nil
	file_poll_proto_goTypes = nil
	file_poll_proto_depIdxs = nil
}
