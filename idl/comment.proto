syntax = "proto3";
package rpc.comment;

import "user.proto";
option go_package = "github.com/BigNoseCattyHome/aorb/backend/rpc/comment;comment";


message Comment{
  string id = 1;
  user.User user = 2;
  string content = 3;
  string create_at = 4;
}

enum ActionCommentType{
  ACTION_COMMENT_TYPE_UNSPECIFIED = 0;
  ACTION_COMMENT_TYPE_ADD = 1;
  ACTION_COMMENT_TYPE_DELETE = 2;
}

message ActionCommentRequest{
  string actor_id = 1;
  string poll_id = 2;
  ActionCommentType action_type = 3;
  oneof action{
    string comment_text = 4;
    string comment_id = 5;
  }
}

message ActionCommentResponse{
  int32 status_code = 1;
  string status_msg = 2;
  optional Comment comment = 3;
}

message ListCommentRequest{
  string actor_id = 1;
  string poll_id = 2;
}

message ListCommentResponse{
  int32 status_code = 1;
  string status_msg = 2;
  repeated Comment comment_list = 3;
}

message CountCommentRequest{
  string actor_id = 1;
  string poll_id = 2;
}

message CountCommentResponse{
  int32 status_code = 1;
  string status_msg = 2;
  uint32 comment_count = 3;
}

service CommentService{
  rpc ActionComment(ActionCommentRequest) returns (ActionCommentResponse);
  rpc ListComment(ListCommentRequest) returns (ListCommentResponse);
  rpc CountComment(CountCommentRequest) returns (CountCommentResponse);
}
